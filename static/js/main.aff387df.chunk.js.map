{"version":3,"sources":["ConfirmationBox.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ConfirmationBox","props","Root","show","open","as","Fragment","onClose","Child","enter","enterFrom","enterTo","entered","leave","leaveFrom","leaveTo","Overlay","className","strokeWidth","onClick","title","desc","cancelText","okText","defaultProps","React","memo","App","useState","isDialogOpen","setIsDialogOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAcMA,EAAmC,SAACC,GACxC,OACE,cAAC,IAAWC,KAAZ,CAAiBC,KAAMF,EAAMG,KAAMC,GAAIC,WAAvC,SACI,eAAC,IAAD,CAAQF,KAAMH,EAAMG,KAAMG,QAASN,EAAMM,QAAzC,UACA,cAAC,IAAWC,MAAZ,CACIH,GAAIC,WACJG,MAAM,kCACNC,UAAU,YACVC,QAAQ,aACRC,QAAQ,aACRC,MAAM,kCACNC,UAAU,aACVC,QAAQ,YARZ,SAUI,cAAC,IAAOC,QAAR,CAAgBC,UAAU,4CAG9B,cAAC,IAAWT,MAAZ,CACIH,GAAIC,WACJG,MAAM,kCACNC,UAAU,YACVC,QAAQ,cACRC,QAAQ,cACRC,MAAM,kCACNC,UAAU,cACVC,QAAQ,YARZ,SAUI,sBAAKE,UAAU,wJAAf,UACI,cAAC,IAAD,CAAiBA,UAAU,oBAAoBC,YAAY,OAC3D,iCACI,cAAC,IAAD,CAAOD,UAAU,yDAAyDE,QAAS,kBAAKlB,EAAMM,SAAQ,QAE1G,oBAAIU,UAAU,6BAAd,SAA4ChB,EAAMmB,QACjDnB,EAAMoB,MAAQ,mBAAGJ,UAAU,oDAAb,SAAkEhB,EAAMoB,OACvF,sBAAKJ,UAAU,8BAAf,UACI,wBAAQA,UAAU,+FAA+FE,QAAS,kBAAKlB,EAAMM,SAAQ,IAA7I,SAAsJN,EAAMqB,aAC5J,wBAAQL,UAAU,6FAAlB,SAAiHhB,EAAMsB,uBAU3IvB,EAAgBwB,aAAe,CAC3BJ,MAAO,gBACPG,OAAQ,KACRD,WAAY,UAGDG,UAAMC,KAAK1B,GC9CX2B,MAhBf,WAEE,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,OACE,qCACA,qBAAKb,UAAU,oFAAf,SACE,wBAAQA,UAAU,sGAClBE,QAAS,kBAAMW,GAAgB,IAD/B,2BAIF,cAAC,EAAD,CAAiBV,MAAM,gBAAgBC,KAAK,6EAA6EjB,KAAMyB,EAActB,QAAS,kBAAMuB,GAAgB,UCDjKC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aff387df.chunk.js","sourcesContent":["import { Dialog, Transition } from \"@headlessui/react\";\r\nimport React from \"react\";\r\nimport {ExclamationIcon, XIcon} from \"@heroicons/react/outline\";\r\nimport { Fragment } from \"react\";\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    title: string;\r\n    desc?: string;\r\n    okText?: string;\r\n    cancelText?: string;\r\n    onClose: (open: false) => void;\r\n}\r\n\r\nconst ConfirmationBox: React.FC<Props> = (props) => {\r\n  return (\r\n    <Transition.Root show={props.open} as={Fragment}>\r\n        <Dialog open={props.open} onClose={props.onClose}>\r\n        <Transition.Child \r\n            as={Fragment}\r\n            enter=\"transition-opacity duration-500\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-70\"\r\n            entered=\"opacity-70\"\r\n            leave=\"transition-opacity duration-500\"\r\n            leaveFrom=\"opacity-70\"\r\n            leaveTo=\"opacity-0\"\r\n        >\r\n            <Dialog.Overlay className=\"fixed inset-0 z-10 transform bg-black\"></Dialog.Overlay>\r\n        </Transition.Child>\r\n        \r\n        <Transition.Child\r\n            as={Fragment}\r\n            enter=\"transition-opacity duration-500\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            entered=\"opacity-100\"\r\n            leave=\"transition-opacity duration-500\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n        >\r\n            <div className=\"fixed z-20 flex flex-col items-center self-center p-10 transform -translate-x-1/2 -translate-y-1/2 bg-white rounded-md duration top-1/2 left-1/2 w-96\">\r\n                <ExclamationIcon className=\"text-red-500 w-28\" strokeWidth=\"2%\" />\r\n                <button>\r\n                    <XIcon className=\"fixed w-4 text-gray-600 hover:text-black top-4 right-4\" onClick={()=> props.onClose(false)}/>\r\n                </button>\r\n                <h3 className=\"m-4 text-3xl text-gray-500\">{props.title}</h3>\r\n                {props.desc && <p className=\"m-4 text-sm font-normal text-center text-gray-400\">{props.desc}</p>}\r\n                <div className=\"flex flex-row m-4 space-x-3\">\r\n                    <button className=\"inline-block px-5 py-2 text-white duration-300 bg-gray-300 rounded-sm w-28 hover:bg-gray-400\" onClick={()=> props.onClose(false)}>{props.cancelText}</button>\r\n                    <button className=\"inline-block px-5 py-2 text-white duration-300 bg-red-500 rounded-sm w-28 hover:bg-red-600\" >{props.okText}</button>\r\n                </div>\r\n            </div>\r\n            \r\n        </Transition.Child>\r\n        </Dialog>\r\n    </Transition.Root>  \r\n  );\r\n};\r\n\r\nConfirmationBox.defaultProps = {\r\n    title: \"Are you sure?\",\r\n    okText: \"OK\",\r\n    cancelText: \"Cancel\",\r\n};\r\n\r\nexport default React.memo(ConfirmationBox);","import React from 'react';\nimport { useState } from 'react';\nimport ConfirmationBox from './ConfirmationBox';\n\nfunction App() {\n\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  return (\n    <>\n    <div className=\"flex items-center justify-center w-full h-screen m-auto bg-blue-600 bg-opacity-60\">\n      <button className=\"px-4 py-2 font-medium text-white duration-300 bg-black rounded-lg bg-opacity-20 hover:bg-opacity-30\"\n      onClick={() => setIsDialogOpen(true)}\n      >Open Dialog</button>\n    </div>\n    <ConfirmationBox title=\"Are you sure?\" desc=\"Do you really want to delete these records? This process cannot be undone.\" open={isDialogOpen} onClose={() => setIsDialogOpen(false)}/>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}